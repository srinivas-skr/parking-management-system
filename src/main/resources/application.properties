# Application Name
spring.application.name=parking-management-system

# Server Configuration
server.port=8080
server.error.include-message=always
server.error.include-binding-errors=always

# Actuator for Health Checks (Required for Fly.io)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Disable mail health check to prevent it from affecting app status
management.health.mail.enabled=false

# Database Configuration - H2 In-Memory (No Docker/MySQL needed!)
spring.datasource.url=jdbc:h2:mem:parking_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# H2 Console - Access at: http://localhost:8080/h2-console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.open-in-view=false
spring.jpa.defer-datasource-initialization=true

# ===================================
# MYSQL PRODUCTION DATABASE (Comment out H2, uncomment MySQL when deploying)
# ===================================
# spring.datasource.url=jdbc:mysql://localhost:3306/parking_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
# spring.datasource.username=root
# spring.datasource.password=your_mysql_password
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# spring.jpa.hibernate.ddl-auto=update

# Email Configuration (Gmail example)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME:your-email@gmail.com}
spring.mail.password=${EMAIL_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Logging Configuration
logging.level.root=INFO
logging.level.com.parking=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# SpringDoc OpenAPI (Swagger) Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Parking System Business Rules
parking.slot.auto-release-hours=24
parking.booking.advance-days=7
parking.pricing.hourly-rate=50

# ===================================
# ENVIRONMENT VARIABLES (for production deployment)
# ===================================
# JWT Secret (Use environment variable in production)
jwt.secret=${JWT_SECRET:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
jwt.expiration=${JWT_EXPIRATION:86400000}

# MySQL Production (Use environment variables when deploying)
# spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/parking_db}
# spring.datasource.username=${DB_USERNAME:root}
# spring.datasource.password=${DB_PASSWORD:password}
